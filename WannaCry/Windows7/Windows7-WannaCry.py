import pathlib
import os.path
import time
from os.path import exists
from pathlib import Path
import os
import psutil
import sys
import logging
from watchdog.observers import Observer
from watchdog.events import LoggingEventHandler
import checksumdir
import datetime
######
check = ''
var = ''
temp = ''
#path1 = ["C:\\HoneyFolder", "C:\Program Files\Java", "C:\Checkfolder", "C:\Apples", "C:\Banana", "C:\Cherries", "C:\DragonFruit", "C:\Egg", "C:\Fruit"]

## Variable with a singler folder 

path = "C:\\HoneyFolder\\REA"
## Variable as a name 
#addfolder  = "Hfolder"
for x in range(100):
    #Create multi folders
    multipath = path + str(x) + "\\"
    try:
            #makedirs create new subfolder under new folder
            os.makedirs(multipath)
    except OSError:  
            print ("Folder already exists.")
    else:
        print ("Successfully created the directory %s " % multipath)
        ##############################3
for x in range(1):
    multipath = path + str(x) + "\\"
    for a in range(1):
        var = multipath + '\\MyFile' + str(a) + '.txt'
        f1 = open(var,"a")
        f1.write("hello ransomware")
        c1 = f1.close()
        #print('file created')
    #####################################
    
for x in range(100):

        multipath = path + str(x) + "\\"
        print(multipath)
        hash1 = []
        a = ''
        hashtemp = ''
        count= 0
        a = multipath
        hashtemp = checksumdir.dirhash(a)
        hash1.append(hashtemp)
        #print hash1[0]
        print("The hash for path " + a + "is: " + hashtemp)
        

################################ OBSERVER/WATCHER/WATCHDOG STARTS HERE "MONITORING" #######################################
if __name__ == "__main__":

    observer = Observer()
  
    observer.start()

    newhash = ''
# Check cpu usage and assign process name as ransomeware executable
    try:
        print("Average CPU usage in percentage")
        print(psutil.cpu_percent()) 
        while True:
            #time.sleep(1)
            PROCNAME = "WannaCry.EXE"

# Determine if the processes match what we specified above, and if they do retreive the time the process is seen starting.
#for proc in psutil.process_iter(attrs=['pid', 'name']):
            for proc in psutil.process_iter():
              if proc.name() == PROCNAME:
                t = datetime.datetime.now()
                print(proc)
# Compare hashes, if it is different then we will kill the process
            for x in range(10):
                
                    multipath = path + str(x) + "\\"
                    hash2 = []
                    a = ''
                    hashtemp1 = ''
                    count= 0
                    a = multipath
                    hashtemp1 = checksumdir.dirhash(a)
                    hash2.append(hashtemp1)
                    #print hash1[0]
                    
                    print("Scanning Directory: " + a + "for hash changes: " + hashtemp)
                    for item in hash2:
                        for item2 in hash1:
                            if item == item2:
                                print "These items match"
                            else:
                                print "No match"






                    
                        if exists('C:\\Users\Vagrant\Documents\MyFile0.txt.WNCRY') == True:
                            print("------Ransonware Detected-----------------") 
                            check = str(os.getpid())
                            print(type(check))
                            print("Average CPU usage in percentage")
                            print(psutil.cpu_percent()) 
                            var = 'taskkill /f /im WannaCry.EXE'
                            os.system(var)
                            print(time.clock())
                            f = datetime.datetime.now()
                            sub = f - t
                            print("Time to stop ")
                            print(sub)
                            exit()
                        else:
                            print("Ransomware not running")
    except KeyboardInterrupt:
        observer.stop()
    observer.join()